//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: paci_hyttinen_aaltosetala_severi_ventricularVersion
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Apr 25 21:09:14 2017
//! 
//! <autogenerated>

#include "paci_hyttinen_aaltosetala_severi_ventricularVersionBackwardEuler.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

class Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables : public AbstractLookupTableCollection
{
public:
    static Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables* Instance()
    {
        if (mpInstance.get() == NULL)
        {
            mpInstance.reset(new Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables);
        }
        return mpInstance.get();
    }
    
    void FreeMemory()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
        mNeedsRegeneration.assign(mNeedsRegeneration.size(), true);
    }
    
    // Row lookup methods
    // using linear-interpolation
    double* _lookup_0_row(unsigned i, double _factor_)
    {
        for (unsigned j=0; j<26; j++)
        {
            const double y1 = _lookup_table_0[i][j];
            const double y2 = _lookup_table_0[i+1][j];
            _lookup_table_0_row[j] = y1 + (y2-y1)*_factor_;
        }
        return _lookup_table_0_row;
    }
    
    
    const double * IndexTable0(double var_chaste_interface__Membrane__Vm)
    {
        const double _offset_0 = var_chaste_interface__Membrane__Vm - mTableMins[0];
        const double _offset_0_over_table_step = _offset_0 * mTableStepInverses[0];
        const unsigned _table_index_0 = (unsigned)(_offset_0_over_table_step);
        const double _factor_0 = _offset_0_over_table_step - _table_index_0;
        const double* const _lt_0_row = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->_lookup_0_row(_table_index_0, _factor_0);
        return _lt_0_row;
    }
    
// LCOV_EXCL_START
    bool CheckIndex0(double& var_chaste_interface__Membrane__Vm)
    {
        bool _oob_0 = false;
        if (var_chaste_interface__Membrane__Vm>mTableMaxs[0] || var_chaste_interface__Membrane__Vm<mTableMins[0])
        {
// LCOV_EXCL_START
            _oob_0 = true;
// LCOV_EXCL_STOP
        }
        return _oob_0;
    }
// LCOV_EXCL_STOP

    ~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables()
    {
        if (_lookup_table_0)
        {
            delete[] _lookup_table_0;
            _lookup_table_0 = NULL;
        }
    }
    
protected:
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables(const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables& operator= (const Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables&);
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables()
    {
        assert(mpInstance.get() == NULL);
        mKeyingVariableNames.resize(1);
        mNumberOfTables.resize(1);
        mTableMins.resize(1);
        mTableSteps.resize(1);
        mTableStepInverses.resize(1);
        mTableMaxs.resize(1);
        mNeedsRegeneration.resize(1);
        mKeyingVariableNames[0] = "membrane_voltage";
        mNumberOfTables[0] = 26;
        mTableMins[0] = -100.0001;
        mTableSteps[0] = 0.001;
        mTableStepInverses[0] = 1000.0;
        mTableMaxs[0] = 99.9999;
        mNeedsRegeneration[0] = true;
        _lookup_table_0 = NULL;
        Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::RegenerateTables();
    }
    
    void RegenerateTables()
    {
        AbstractLookupTableCollection::EventHandler::BeginEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
        if (mNeedsRegeneration[0])
        {
            if (_lookup_table_0)
            {
                delete[] _lookup_table_0;
                _lookup_table_0 = NULL;
            }
            const unsigned _table_size_0 = 1 + (unsigned)((mTableMaxs[0]-mTableMins[0])/mTableSteps[0]+0.5);
            _lookup_table_0 = new double[_table_size_0][26];
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][0] = 0.001 * ((1.0 / (1.0 + exp((-(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 9.0999999999999996)) * 0.14285714285714285))) / (((((0.25 + (1.3999999999999999 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 35.0) * 0.076923076923076927)))) * (1.3999999999999999 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) + 50.0) * 0.050000000000000003)))) * 1.0) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][1] = 0.001 * ( -1.0 / (((((0.25 + (1.3999999999999999 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 35.0) * 0.076923076923076927)))) * (1.3999999999999999 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) + 50.0) * 0.050000000000000003)))) * 1.0) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][2] = 0.001 * ((0.33000000000000002 + (0.67000000000000004 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 35.0) * 0.25)))) / ((((600.0 * exp((-pow(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 25.0, 2.0)) * 0.0058823529411764705)) + ((31.0 / (1.0 + exp((25.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))) + (16.0 / (1.0 + exp((30.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))))) * 1.0) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][3] = 0.001 * ( -1.0 / ((((600.0 * exp((-pow(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 25.0, 2.0)) * 0.0058823529411764705)) + ((31.0 / (1.0 + exp((25.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))) + (16.0 / (1.0 + exp((30.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))))) * 1.0) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][4] = (1.0 * ((450.0 / (1.0 + exp(( -45.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))) * (6.0 / (1.0 + exp((30.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.086956521739130432))))) * 0.001;
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][5] = 0.001 * ( -1.0 / ((1.0 * ((450.0 / (1.0 + exp(( -45.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))) * (6.0 / (1.0 + exp((30.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.086956521739130432))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][6] = 0.001 * ((1.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 88.0) * 0.02))) / ((1.0 * ((3.0 / (1.0 + exp(( -60.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp(( -60.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][7] = 0.001 * ( -1.0 / ((1.0 * ((3.0 / (1.0 + exp(( -60.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp(( -60.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][8] = 0.001 * ((1.0 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 20.0) * 0.0625))) / ((1.0 * ((1100.0 / sqrt(1.0 + exp(( -10.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.16666666666666666))) * (1.0 / (1.0 + exp(( -60.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][9] = 0.001 * ( -1.0 / ((1.0 * ((1100.0 / sqrt(1.0 + exp(( -10.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.16666666666666666))) * (1.0 / (1.0 + exp(( -60.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.050000000000000003))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][10] = 0.001 * ((1.0 / sqrt(1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 72.099999999999994) * 0.17543859649122806))) / (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (1.5 / (((((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (0.057000000000000002 * exp((-(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 80.0)) * 0.14705882352941177)) : 0.0) + (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? ((2.7000000000000002 * exp(0.079000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) + (3.1000000000000001 * (100000.0 * exp(0.34849999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))))) : (0.77000000000000002 / (0.13 * (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 10.66) *  -0.0900900900900901)))))) * 1000.0)) : 0.002542));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][11] = 0.001 * ( -1.0 / (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (1.5 / (((((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (0.057000000000000002 * exp((-(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 80.0)) * 0.14705882352941177)) : 0.0) + (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? ((2.7000000000000002 * exp(0.079000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) + (3.1000000000000001 * (100000.0 * exp(0.34849999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))))) : (0.77000000000000002 / (0.13 * (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 10.66) *  -0.0900900900900901)))))) * 1000.0)) : 0.002542));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][12] = 0.001 * ((1.0 / sqrt(1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 72.099999999999994) * 0.17543859649122806))) / (7.0 / (((((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (((( -25428.0 * exp(0.24440000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) - (6.9480000000000004 * (9.9999999999999995e-07 * exp( -0.043909999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))))) * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 37.780000000000001)) / (1.0 + exp(0.311 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 79.230000000000004)))) : 0.0) + (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? ((0.024240000000000001 * exp( -0.01052 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) / (1.0 + exp( -0.13780000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) / (1.0 + exp( -0.10000000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 32.0)))))) * 1000.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][13] = 0.001 * ( -1.0 / (7.0 / (((((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? (((( -25428.0 * exp(0.24440000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) - (6.9480000000000004 * (9.9999999999999995e-07 * exp( -0.043909999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))))) * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 37.780000000000001)) / (1.0 + exp(0.311 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 79.230000000000004)))) : 0.0) + (((0.001 * var_chaste_interface__Membrane__Vm) <  -0.040000000000000001) ? ((0.024240000000000001 * exp( -0.01052 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) / (1.0 + exp( -0.13780000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0))) / (1.0 + exp( -0.10000000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 32.0)))))) * 1000.0)));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][14] = 0.001 * ((1.0 / pow(1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 34.100000000000001) * 0.16949152542372881), 0.33333333333333331)) / ((1.0 * ((1.0 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 60.0) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - 50.0) * 0.0050000000000000001)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][15] = 0.001 * ( -1.0 / ((1.0 * ((1.0 / (1.0 + exp((((-(0.001 * var_chaste_interface__Membrane__Vm)) * 1000.0) - 60.0) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - 50.0) * 0.0050000000000000001)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][16] = 0.001 * ((1.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 77.849999999999994) * 0.20000000000000001))) / ((1900.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 15.0) * 0.10000000000000001))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][17] = 0.001 * ( -1.0 / ((1900.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 15.0) * 0.10000000000000001))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][18] = 0.001 * ((1.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 53.0) * 0.076923076923076927))) / ((6.0599999999999996 + (39.101999999999997 / ((0.56999999999999995 * exp( -0.080000000000000002 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 44.0))) + (0.065000000000000002 * exp(0.10000000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 45.93)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][19] = 0.001 * ( -1.0 / ((6.0599999999999996 + (39.101999999999997 / ((0.56999999999999995 * exp( -0.080000000000000002 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 44.0))) + (0.065000000000000002 * exp(0.10000000000000001 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 45.93)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][20] = 0.001 * ((1.0 / (1.0 + exp((-(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - 22.300000000000001)) * 0.053333333333333337))) / ((2.75352 + (14.40516 / ((1.0369999999999999 * exp(0.089999999999999997 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 30.609999999999999))) + (0.36899999999999999 * exp( -0.12 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 23.84)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][21] = 0.001 * ( -1.0 / ((2.75352 + (14.40516 / ((1.0369999999999999 * exp(0.089999999999999997 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 30.609999999999999))) + (0.36899999999999999 * exp( -0.12 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 23.84)))))) * 0.001));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][22] = 1.0 / (1.0 + exp((333.33333333333331 * (0.001 * var_chaste_interface__Membrane__Vm)) + 8.6666666666666661));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][23] = 1.0 / (((20.0 + (1102.5 * exp( -0.0044444444444444444 * pow(pow((1000.0 * (0.001 * var_chaste_interface__Membrane__Vm)) + 27.0, 2.0), 2.0)))) + (200.0 / (1.0 + exp(1.3 - (100.0 * (0.001 * var_chaste_interface__Membrane__Vm)))))) + (180.0 * (1.0 / (1.0 + exp(3.0 + (100.0 * (0.001 * var_chaste_interface__Membrane__Vm)))))));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][24] = 1.0 / (1.0 + exp((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 26.0) * 0.33333333333333331));
            }
            
            for (unsigned i=0 ; i<_table_size_0; i++)
            {
                const double var_chaste_interface__Membrane__Vm = mTableMins[0] + i*mTableSteps[0];
                _lookup_table_0[i][25] = 20.0 + ((1102.5 * exp(-pow(pow(((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) + 27.0, 2.0) * 0.066666666666666666, 2.0))) + ((200.0 / (1.0 + exp((13.0 - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001))) + (180.0 / (1.0 + exp((30.0 + ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.10000000000000001)))));
            }
            
            mNeedsRegeneration[0] = false;
        }
        
        AbstractLookupTableCollection::EventHandler::EndEvent(AbstractLookupTableCollection::EventHandler::GENERATE_TABLES);
    }
    
private:
    /** The single instance of the class */
    static std::auto_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables> mpInstance;

    // Row lookup methods memory
    double _lookup_table_0_row[26];
    
    // Lookup tables
    double (*_lookup_table_0)[26];
    
};

std::auto_ptr<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::mpInstance;

    boost::shared_ptr<RegularStimulus> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__stim_mode__i_stim_Start = 0.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_PulseDuration = 5.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Amplitude = (5.4999999999999996e-10 / mParameters[8]) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__stim_mode__i_stim_Amplitude),
                var_chaste_interface__stim_mode__i_stim_PulseDuration,
                var_chaste_interface__stim_mode__i_stim_Period,
                var_chaste_interface__stim_mode__i_stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[15];
    }
    
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<6>(
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 150; // (c,model_parameters__Ki) [millimolar]
        this->mParameters[1] = 1.8; // (c,model_parameters__Cao) [millimolar]
        this->mParameters[2] = 5.4; // (c,model_parameters__Ko) [millimolar]
        this->mParameters[3] = 151; // (c,model_parameters__Nao) [millimolar]
        this->mParameters[4] = 8.635702e-5; // (c,i_CaL__g_CaL) [metre_cube_per_F_per_s]
        this->mParameters[5] = 0.69264; // (c,i_b_Ca__g_b_Ca) [S_per_F]
        this->mParameters[6] = 0.9; // (c,i_b_Na__g_b_Na) [S_per_F]
        this->mParameters[7] = 0.4125; // (c,i_PCa__g_PCa) [A_per_F]
        this->mParameters[8] = 9.87109e-11; // (c,model_parameters__Cm) [farad]
        this->mParameters[9] = 3671.2302; // (c,i_Na__g_Na) [S_per_F]
        this->mParameters[10] = 30.10312; // (c,i_f__g_f) [S_per_F]
        this->mParameters[11] = 28.1492; // (c,i_K1__g_K1) [S_per_F]
        this->mParameters[12] = 29.8667; // (c,i_Kr__g_Kr) [S_per_F]
        this->mParameters[13] = 2.041; // (c,i_Ks__g_Ks) [S_per_F]
        this->mParameters[14] = 4900; // (c,i_NaCa__kNaCa) [A_per_F]
        this->mParameters[15] = 1.841424; // (c,i_NaK__PNaK) [A_per_F]
        this->mParameters[16] = 29.9038; // (c,i_to__g_to) [S_per_F]
        this->mParameters[17] = 310; // (c,model_parameters__T) [kelvin]
    }
    
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler()
    {
    }
    
    AbstractLookupTableCollection* Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::GetLookupTableCollection()
    {
        return Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance();
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        
        
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
        const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
        const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * ((0.001 * var_chaste_interface__Membrane__Vm) -  -0.017000000000000001)); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
        const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * (((0.001 * var_chaste_interface__Membrane__Vm) - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
        const double var_i_to__i_to = mParameters[16] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-(0.001 * var_chaste_interface__Membrane__Vm)) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * (8.3144720000000003 * mParameters[17])) * 1.0364268649036186e-05) * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai))); // A_per_F
        const double var_i_b_Na__i_b_Na = mParameters[6] * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na); // A_per_F
        const double var_chaste_interface__i_NaK__i_NaK = var_i_NaK__i_NaK; // A_per_F
        const double var_chaste_interface__i_K1__i_K1 = var_i_K1__i_K1; // A_per_F
        const double var_chaste_interface__i_f__i_f = var_i_f__i_f; // A_per_F
        const double var_chaste_interface__i_Na__i_Na = var_i_Na__i_Na; // A_per_F
        const double var_chaste_interface__i_to__i_to = var_i_to__i_to; // A_per_F
        const double var_chaste_interface__i_Kr__i_Kr = var_i_Kr__i_Kr; // A_per_F
        const double var_chaste_interface__i_Ks__i_Ks = var_i_Ks__i_Ks; // A_per_F
        const double var_chaste_interface__i_CaL__i_CaL = var_i_CaL__i_CaL; // A_per_F
        const double var_chaste_interface__i_PCa__i_PCa = var_i_PCa__i_PCa; // A_per_F
        const double var_chaste_interface__i_NaCa__i_NaCa = var_i_NaCa__i_NaCa; // A_per_F
        const double var_chaste_interface__i_ionic = (var_chaste_interface__i_K1__i_K1 + var_chaste_interface__i_to__i_to + var_chaste_interface__i_Kr__i_Kr + var_chaste_interface__i_Ks__i_Ks + var_chaste_interface__i_CaL__i_CaL + var_chaste_interface__i_NaK__i_NaK + var_chaste_interface__i_Na__i_Na + var_chaste_interface__i_NaCa__i_NaCa + var_chaste_interface__i_PCa__i_PCa + var_chaste_interface__i_f__i_f + var_i_b_Na__i_b_Na + var_i_b_Ca__i_b_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::ComputeResidual(double var_chaste_interface__environment__time, const double rCurrentGuess[6], double rResidual[6])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        
        double var_chaste_interface__calcium_dynamics__Ca_SR = rCurrentGuess[0];
        double var_chaste_interface__calcium_dynamics__Cai = rCurrentGuess[1];
        double var_chaste_interface__calcium_dynamics__g = rCurrentGuess[2];
        double var_chaste_interface__i_CaL_f1_gate__f1 = rCurrentGuess[3];
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rCurrentGuess[4];
        double var_chaste_interface__sodium_dynamics__Nai = rCurrentGuess[5];
        
        // Lookup table indexing
        const bool _oob_0 = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Membrane__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__Membrane__Vm);
        
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-(0.001 * var_chaste_interface__Membrane__Vm)) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * (8.3144720000000003 * mParameters[17])) * 1.0364268649036186e-05) * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai))); // A_per_F
        const double var_i_b_Na__i_b_Na = mParameters[6] * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na); // A_per_F
        const double var_i_CaL_fCa_gate__fCa_inf = ((1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 1666.6666666666667, 8.0))) + ((0.10000000000000001 / (1.0 + exp((var_chaste_interface__calcium_dynamics__Cai - 0.00089999999999999998) * 10000.0))) + (0.29999999999999999 / (1.0 + exp((var_chaste_interface__calcium_dynamics__Cai - 0.00075000000000000002) * 1250.0))))) * 0.76010945576162958; // dimensionless
        const double var_calcium_dynamics__g_inf = (var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 2857.1428571428573, 6.0))) : (1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 2857.1428571428573, 16.0))); // dimensionless
        const double var_calcium_dynamics__i_rel = (8.2319999999999993 + ((16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0)) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0)))) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__calcium_dynamics__g * 0.041099999999999998)); // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.56064000000000003 / (1.0 + (6.2499999999999997e-08 / pow(var_chaste_interface__calcium_dynamics__Cai, 2.0))); // millimolar_per_second
        const double var_calcium_dynamics__i_leak = (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Cai) * 0.00044443999999999999; // millimolar_per_second
        const double d_dt_chaste_interface__i_CaL_f1_gate__f1 = 0.001 * ((_lt_0_row[24] - var_chaste_interface__i_CaL_f1_gate__f1) / ((_lt_0_row[25] * (((_lt_0_row[24] - var_chaste_interface__i_CaL_f1_gate__f1) > 0.0) ? (1.0 + (1433.0 * (var_chaste_interface__calcium_dynamics__Cai - 4.9999999999999996e-05))) : 1.0)) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_CaL_fCa_gate__fCa = 0.001 * ((((((0.001 * var_chaste_interface__Membrane__Vm) >  -0.059999999999999998) && (var_i_CaL_fCa_gate__fCa_inf > var_chaste_interface__i_CaL_fCa_gate__fCa)) ? 0.0 : 1.0) * (var_i_CaL_fCa_gate__fCa_inf - var_chaste_interface__i_CaL_fCa_gate__fCa)) * 500.0); // 'per millisecond'
        const double d_dt_chaste_interface__sodium_dynamics__Nai = 0.001 * (((-mParameters[8]) * (var_i_Na__i_Na + (var_i_b_Na__i_b_Na + ((3.0 * var_i_NaK__i_NaK) + (3.0 * var_i_NaCa__i_NaCa))))) * 1177757801.0268393); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Cai = 0.001 * ((1.0 / (1.0 + (0.00025000000000000001 / pow(var_chaste_interface__calcium_dynamics__Cai + 0.001, 2.0)))) * (((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) + var_calcium_dynamics__i_rel) - ((((var_i_CaL__i_CaL + (var_i_b_Ca__i_b_Ca + var_i_PCa__i_PCa)) - (2.0 * var_i_NaCa__i_NaCa)) * mParameters[8]) * 588878900.51341963))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = 0.001 * ((((1.0 / (1.0 + (3.0 / pow(var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999, 2.0)))) * 8800.0) * 0.0017131207921470542) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__g = 0.001 * (((((var_calcium_dynamics__g_inf > var_chaste_interface__calcium_dynamics__g) && ((0.001 * var_chaste_interface__Membrane__Vm) >  -0.059999999999999998)) ? 0.0 : 1.0) * (var_calcium_dynamics__g_inf - var_chaste_interface__calcium_dynamics__g)) * 500.0); // 'per millisecond'
        
        rResidual[3] = rCurrentGuess[3] - rY[5] - mDt*d_dt_chaste_interface__i_CaL_f1_gate__f1;
        rResidual[4] = rCurrentGuess[4] - rY[7] - mDt*d_dt_chaste_interface__i_CaL_fCa_gate__fCa;
        rResidual[5] = rCurrentGuess[5] - rY[14] - mDt*d_dt_chaste_interface__sodium_dynamics__Nai;
        rResidual[1] = rCurrentGuess[1] - rY[15] - mDt*d_dt_chaste_interface__calcium_dynamics__Cai;
        rResidual[0] = rCurrentGuess[0] - rY[16] - mDt*d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        rResidual[2] = rCurrentGuess[2] - rY[17] - mDt*d_dt_chaste_interface__calcium_dynamics__g;
    }
    
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::ComputeJacobian(double var_chaste_interface__environment__time, const double rCurrentGuess[6], double rJacobian[6][6])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        
        double var_chaste_interface__calcium_dynamics__Ca_SR = rCurrentGuess[0];
        double var_chaste_interface__calcium_dynamics__Cai = rCurrentGuess[1];
        double var_chaste_interface__calcium_dynamics__g = rCurrentGuess[2];
        double var_chaste_interface__i_CaL_f1_gate__f1 = rCurrentGuess[3];
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rCurrentGuess[4];
        double var_chaste_interface__sodium_dynamics__Nai = rCurrentGuess[5];
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Membrane__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__Membrane__Vm);
        
        const double var_environment__dt = 0.001 * var_chaste_interface__environment__dt; // second
        const double var_t2 = 8.3144720000000003 * mParameters[17]; // dimensionless
        const double var_t83 = 1.0 / var_chaste_interface__calcium_dynamics__Cai; // dimensionless
        const double var_t95 = 1.0 / mParameters[17]; // dimensionless
        const double var_t96 = 0.12027221933034352 * var_t95; // dimensionless
        const double var_t98 = ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995) * var_t96; // dimensionless
        const double var_t100 = exp(2.0 * var_t98); // dimensionless
        const double var_t103 = (var_chaste_interface__calcium_dynamics__Cai * var_t100) - (0.34100000000000003 * mParameters[1]); // dimensionless
        const double var_t106 = var_t100 - 1.0; // dimensionless
        const double var_t107 = 1.0 / var_t106; // dimensionless
        const double var_t109 = var_chaste_interface__i_CaL_f1_gate__f1 * var_chaste_interface__i_CaL_f2_gate__f2; // dimensionless
        const double var_t110 = var_t109 * var_chaste_interface__i_CaL_fCa_gate__fCa; // dimensionless
        const double var_t114 = mParameters[4] * (0.001 * var_chaste_interface__Membrane__Vm); // dimensionless
        const double var_t126 = ((var_t100 * var_t107) * var_chaste_interface__i_CaL_d_gate__d) * var_t110; // dimensionless
        const double var_t135 = var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa; // dimensionless
        const double var_t140 = mParameters[15] * mParameters[2]; // dimensionless
        const double var_t142 = 1.0 / (mParameters[2] + 1.0); // dimensionless
        const double var_t143 = var_t140 * var_t142; // dimensionless
        const double var_t144 = var_chaste_interface__sodium_dynamics__Nai + 40.0; // dimensionless
        const double var_t145 = 1.0 / var_t144; // dimensionless
        const double var_t148 = exp( -0.10000000000000001 * var_t98); // dimensionless
        const double var_t150 = exp(-var_t98); // dimensionless
        const double var_t152 = (1.0 + (0.1245 * var_t148)) + (0.035299999999999998 * var_t150); // dimensionless
        const double var_t170 = 1.0 * mParameters[9]; // dimensionless
        const double var_t172 = pow(var_chaste_interface__i_Na_m_gate__m, 2.0) * var_chaste_interface__i_Na_m_gate__m; // dimensionless
        const double var_t173 = var_t172 * var_chaste_interface__i_Na_h_gate__h; // dimensionless
        const double var_t179 = 11604.506155051095 * var_t95; // dimensionless
        const double var_t181 = exp((0.34999999999999998 * (0.001 * var_chaste_interface__Membrane__Vm)) * var_t179); // dimensionless
        const double var_t183 = pow(var_chaste_interface__sodium_dynamics__Nai, 2.0); // dimensionless
        const double var_t184 = var_t183 * var_chaste_interface__sodium_dynamics__Nai; // dimensionless
        const double var_t193 = exp(( -0.65000000000000002 * (0.001 * var_chaste_interface__Membrane__Vm)) * var_t179); // dimensionless
        const double var_t195 = pow(mParameters[3], 2.0) * mParameters[3]; // dimensionless
        const double var_t196 = var_t193 * var_t195; // dimensionless
        const double var_t198 = (var_t196 * var_chaste_interface__calcium_dynamics__Cai) * 2.8571431999999999; // dimensionless
        const double var_t205 = 1.0 / (669921.875 + var_t195); // dimensionless
        const double var_t207 = 1.0 / (1.3799999999999999 + mParameters[1]); // dimensionless
        const double var_t208 = var_t205 * var_t207; // dimensionless
        const double var_t210 = 1.0 + (0.10000000000000001 * var_t193); // dimensionless
        const double var_t211 = 1.0 / var_t210; // dimensionless
        const double var_t212 = var_t208 * var_t211; // dimensionless
        const double var_t217 = mParameters[14] * (((var_t181 * var_t184) * mParameters[1]) - var_t198); // dimensionless
        const double var_t231 = 1.0 / var_chaste_interface__sodium_dynamics__Nai; // dimensionless
        const double var_t247 = ((var_t114 * 9309421124.3716221) * 0.12027221933034352) * var_t95; // dimensionless
        const double var_t300 = 1.0 / var_t152; // dimensionless
        const double var_t310 = mParameters[17] * 1.0364268649036186e-05; // dimensionless
        const double var_t311 = var_t310 * var_t231; // dimensionless
        const double var_t317 = var_t207 * var_t211; // dimensionless
        const double var_t329 = pow(var_chaste_interface__calcium_dynamics__Cai, 2.0); // dimensionless
        const double var_t342 = var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001; // dimensionless
        const double var_t343 = 1.0 / var_t342; // dimensionless
        const double var_t345 = mParameters[7] * var_chaste_interface__calcium_dynamics__Cai; // dimensionless
        const double var_t642 = _lt_0_row[22] - var_chaste_interface__i_CaL_f1_gate__f1; // dimensionless
        const double var_t643 = 0.0 < var_t642; // dimensionless
        const double var_t646 = var_t643 ? (0.92835000000000001 + (1433.0 * var_chaste_interface__calcium_dynamics__Cai)) : 1.0; // dimensionless
        const double var_t670 = var_t642 * _lt_0_row[23]; // dimensionless
        const double var_t672 = 1.0 / pow(var_t646, 2.0); // dimensionless
        const double var_t728 = pow(var_t329, 2.0); // dimensionless
        const double var_t729 = pow(var_t728, 2.0); // dimensionless
        const double var_t731 = 1.0 + (5.9537418169999996e+25 * var_t729); // dimensionless
        const double var_t733 = 0.7601094558 / var_t731; // dimensionless
        const double var_t736 = exp((10000.0 * var_chaste_interface__calcium_dynamics__Cai) - 9.0); // dimensionless
        const double var_t737 = 1.0 + var_t736; // dimensionless
        const double var_t739 = 0.076010945580000003 / var_t737; // dimensionless
        const double var_t742 = exp((1250.0 * var_chaste_interface__calcium_dynamics__Cai) - 0.9375); // dimensionless
        const double var_t743 = 1.0 + var_t742; // dimensionless
        const double var_t745 = 0.22803283669999999 / var_t743; // dimensionless
        const double var_t748 = ( -0.059999999999999998 < (0.001 * var_chaste_interface__Membrane__Vm)) && (var_chaste_interface__i_CaL_fCa_gate__fCa < ((var_t733 + var_t739) + var_t745)); // dimensionless
        const double var_t753 = ((var_t748 ? 0.0 : 0.0) * (((var_t733 + var_t739) + var_t745) - var_chaste_interface__i_CaL_fCa_gate__fCa)) * 500.0; // dimensionless
        const double var_t754 = var_t748 ? 0.0 : 1.0; // dimensionless
        const double var_t759 = var_t329 * var_chaste_interface__calcium_dynamics__Cai; // dimensionless
        const double var_t760 = var_t728 * var_t759; // dimensionless
        const double var_t1002 = var_chaste_interface__calcium_dynamics__Cai + 0.001; // dimensionless
        const double var_t1003 = pow(var_t1002, 2.0); // dimensionless
        const double var_t1006 = 1.0 + (0.00025000000000000001 / var_t1003); // dimensionless
        const double var_t1007 = 1.0 / var_t1006; // dimensionless
        const double var_t1012 = mParameters[8] * 0.00011363636363636364; // dimensionless
        const double var_t1016 = pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0); // dimensionless
        const double var_t1019 = 0.0625 + var_t1016; // dimensionless
        const double var_t1020 = 1.0 / var_t1019; // dimensionless
        const double var_t1022 = 8.2319999999999993 + ((16.463999999999999 * var_t1016) * var_t1020); // dimensionless
        const double var_t1038 = ((var_t1007 * mParameters[4]) * (0.001 * var_chaste_interface__Membrane__Vm)) * var_t179; // dimensionless
        const double var_t1039 = (var_t103 * var_t107) * var_chaste_interface__i_CaL_d_gate__d; // dimensionless
        const double var_t1063 = (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Cai) * 0.00044443999999999999; // dimensionless
        const double var_t1066 = 1.0 + (6.2499999999999997e-08 * (1.0 / var_t329)); // dimensionless
        const double var_t1068 = 0.56064000000000003 / var_t1066; // dimensionless
        const double var_t1070 = (var_t1022 * var_chaste_interface__i_CaL_d_gate__d) * var_chaste_interface__calcium_dynamics__g; // dimensionless
        const double var_t1102 = ((1.1212800000000001 / pow(var_t1066, 2.0)) * 6.2499999999999997e-08) / var_t759; // dimensionless
        const double var_t1122 = 0.00044443999999999999 + (((0.082199999999999995 * (((16.463999999999999 * var_chaste_interface__calcium_dynamics__Ca_SR) * var_t1020) - (((16.463999999999999 * var_t1016) * var_chaste_interface__calcium_dynamics__Ca_SR) / pow(var_t1019, 2.0)))) * var_chaste_interface__i_CaL_d_gate__d) * var_chaste_interface__calcium_dynamics__g); // dimensionless
        const double var_t1128 = var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999; // dimensionless
        const double var_t1129 = pow(var_t1128, 2.0); // dimensionless
        const double var_t1132 = 1.0 + (3.0 / var_t1129); // dimensionless
        const double var_t1134 = (1.0 / var_t1132) * 8800.0; // dimensionless
        const double var_t1164 = (5.43991024e+20 * var_t728) * var_t329; // dimensionless
        const double var_t1168 = 1.9720198860000001e+55 * pow(var_t729, 2.0); // dimensionless
        const double var_t1171 = (var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1.0 / (1.0 + var_t1164)) : (1.0 / (1.0 + var_t1168)); // dimensionless
        const double var_t1173 = (var_chaste_interface__calcium_dynamics__g < var_t1171) && ( -0.059999999999999998 < (0.001 * var_chaste_interface__Membrane__Vm)); // dimensionless
        const double var_t1178 = ((var_t1173 ? 0.0 : 0.0) * (var_t1171 - var_chaste_interface__calcium_dynamics__g)) * 500.0; // dimensionless
        const double var_t1179 = var_t1173 ? 0.0 : 1.0; // dimensionless
        
        rJacobian[0][0] = 1.0 - (var_environment__dt * (((((((((2.0 / pow(var_t1132, 2.0)) * 8800.0) * 0.0017131207921470542) * ((var_t1068 - (0.041099999999999998 * var_t1070)) - var_t1063)) * 10.0) * 0.29999999999999999) / var_t1129) / var_t1128) - ((var_t1134 * 0.0017131207921470542) * var_t1122)));
        rJacobian[0][1] = -(var_environment__dt * ((var_t1134 * 0.0017131207921470542) * (var_t1102 + 0.00044443999999999999)));
        rJacobian[0][2] = -(var_environment__dt * ((( -0.041099999999999998 * var_t1134) * (0.0017131207921470542 * var_t1022)) * var_chaste_interface__i_CaL_d_gate__d));
        rJacobian[0][3] = 0.0;
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[1][0] = -(var_environment__dt * (var_t1007 * var_t1122));
        rJacobian[1][1] = 1.0 - (var_environment__dt * ((((((2.0 / pow(var_t1006, 2.0)) * (((var_t1063 - var_t1068) + (0.041099999999999998 * var_t1070)) - (((5e+17 * ((((((4.0 * var_t247) * var_t1039) * var_t110) + (mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * var_t2) * 1.0364268649036186e-05) * log(mParameters[1] * var_t83))))) + (var_t345 * var_t343)) - ((2.0 * var_t217) * var_t212))) * mParameters[8]) * 1.1777578010268393e-09))) * 0.00025000000000000001) / var_t1003) / var_t1002) + (var_t1007 * (( -0.00044443999999999999 - var_t1102) - (((5e+17 * ((((((4.0 * var_t247) * var_t126) + ((((0.5 * mParameters[5]) * 8.3144720000000003) * var_t310) * var_t83)) + (mParameters[7] * var_t343)) - (var_t345 / pow(var_t342, 2.0))) + (2.0 * (((((mParameters[14] * var_t193) * var_t195) * 2.8571431999999999) * var_t205) * var_t317)))) * mParameters[8]) * 1.1777578010268393e-09)))));
        rJacobian[1][2] = -(var_environment__dt * (((0.041099999999999998 * var_t1007) * var_t1022) * var_chaste_interface__i_CaL_d_gate__d));
        rJacobian[1][3] = -(var_environment__dt * (((( -2e+18 * var_t1038) * var_t1039) * var_t135) * var_t1012));
        rJacobian[1][4] = -(var_environment__dt * (((( -2e+18 * var_t1038) * var_t1039) * var_t109) * var_t1012));
        rJacobian[1][5] = -(var_environment__dt * (((((((3e+18 * var_t1007) * mParameters[14]) * var_t181) * var_t183) * mParameters[1]) * var_t212) * (var_t1012 * 1.0364268649036186e-05)));
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = -(var_environment__dt * (var_t1178 + ((var_t1179 * ((var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? ((( -3.2639461439999999e+21 / pow(1.0 + var_t1164, 2.0)) * var_t728) * var_chaste_interface__calcium_dynamics__Cai) : (0.00035 < var_chaste_interface__calcium_dynamics__Cai) ? ((( -3.1552318180000002e+56 / pow(1.0 + var_t1168, 2.0)) * var_t729) * var_t760) : NAN)) * 500.0)));
        rJacobian[2][2] = 1.0 - (var_environment__dt * (var_t1178 - (var_t1179 * 500.0)));
        rJacobian[2][3] = 0.0;
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[3][0] = 0.0;
        rJacobian[3][1] = -(var_environment__dt * ((( -1000.0 * var_t670) * var_t672) * (var_t643 ? 1433.0 : 0.0)));
        rJacobian[3][2] = 0.0;
        rJacobian[3][3] = 1.0 - (var_environment__dt * (( -1000.0 * (_lt_0_row[23] * (1.0 / var_t646))) - (((1000.0 * var_t670) * var_t672) * 0.0)));
        rJacobian[3][4] = 0.0;
        rJacobian[3][5] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = -(var_environment__dt * (var_t753 + ((var_t754 * (((( -3.620396362e+26 / pow(var_t731, 2.0)) * var_t760) - ((760.10945579999998 / pow(var_t737, 2.0)) * var_t736)) - ((285.04104589999997 / pow(var_t743, 2.0)) * var_t742))) * 500.0)));
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = 0.0;
        rJacobian[4][4] = 1.0 - (var_environment__dt * (var_t753 - (var_t754 * 500.0)));
        rJacobian[4][5] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = -(var_environment__dt * ((((((((3e+18 * mParameters[8]) * mParameters[14]) * var_t196) * 2.8571431999999999) * var_t208) * var_t211) * 1.0364268649036186e-05) * 0.00011363636363636364));
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (var_environment__dt * ((( -1e+18 * mParameters[8]) * ((((((((var_t170 * var_t173) * var_chaste_interface__i_Na_j_gate__j) * 8.3144720000000003) * var_t311) + ((mParameters[6] * 8.3144720000000003) * var_t311)) + (3.0 * (((var_t140 * var_t142) * var_t145) * var_t300))) - (3.0 * (((var_t143 * var_chaste_interface__sodium_dynamics__Nai) / pow(var_t144, 2.0)) * var_t300))) + (9.0 * (((((mParameters[14] * var_t181) * var_t183) * mParameters[1]) * var_t205) * var_t317)))) * 1.1777578010268393e-09));
    }
    
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::UpdateTransmembranePotential(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        
        
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
        const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
        const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * ((0.001 * var_chaste_interface__Membrane__Vm) -  -0.017000000000000001)); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
        const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * (((0.001 * var_chaste_interface__Membrane__Vm) - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
        const double var_i_to__i_to = mParameters[16] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-(0.001 * var_chaste_interface__Membrane__Vm)) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * (8.3144720000000003 * mParameters[17])) * 1.0364268649036186e-05) * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai))); // A_per_F
        const double var_i_b_Na__i_b_Na = mParameters[6] * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na); // A_per_F
        const double var_chaste_interface__stim_mode__i_stim = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double d_dt_chaste_interface__Membrane__Vm = -((var_i_K1__i_K1 + var_i_to__i_to + var_i_Kr__i_Kr + var_i_Ks__i_Ks + var_i_CaL__i_CaL + var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_NaCa__i_NaCa + var_i_PCa__i_PCa + var_i_f__i_f + var_i_b_Na__i_b_Na + var_i_b_Ca__i_b_Ca) - (var_chaste_interface__stim_mode__i_stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        
        rY[0] += mDt*d_dt_chaste_interface__Membrane__Vm;
    }
    
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::ComputeOneStepExceptVoltage(double var_chaste_interface__environment__time)
    {
        // Time units: millisecond
        std::vector<double>& rY = rGetStateVariables();
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        
        const double var_chaste_interface__environment__dt = mDt;

        // Lookup table indexing
        const bool _oob_0 = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->CheckIndex0(var_chaste_interface__Membrane__Vm);
// LCOV_EXCL_START
        if (_oob_0)
            EXCEPTION(DumpState("membrane_voltage outside lookup table range", rY, var_chaste_interface__environment__time));
// LCOV_EXCL_STOP
        const double* const _lt_0_row = Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler_LookupTables::Instance()->IndexTable0(var_chaste_interface__Membrane__Vm);
        
        
        rY[4] = (var_chaste_interface__i_CaL_d_gate__d + (_lt_0_row[0] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[1] * var_chaste_interface__environment__dt));
        rY[6] = (var_chaste_interface__i_CaL_f2_gate__f2 + (_lt_0_row[2] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[3] * var_chaste_interface__environment__dt));
        rY[8] = (var_chaste_interface__i_Kr_Xr1_gate__Xr1 + ((0.001 * ((1.0 / (1.0 + exp(((1000.0 * (((( -8.3144720000000003 * mParameters[17]) * 4.5062037604505159e-06) * log(pow(1.0 + (mParameters[1] * 0.38461538461538458), 4.0) / (0.025000000000000001 * pow(1.0 + (mParameters[1] * 1.7241379310344829), 4.0)))) - 0.019)) - ((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0)) * 0.2040816326530612))) / _lt_0_row[4])) * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[5] * var_chaste_interface__environment__dt));
        rY[9] = (var_chaste_interface__i_Kr_Xr2_gate__Xr2 + (_lt_0_row[6] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[7] * var_chaste_interface__environment__dt));
        rY[10] = (var_chaste_interface__i_Ks_Xs_gate__Xs + (_lt_0_row[8] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[9] * var_chaste_interface__environment__dt));
        rY[2] = (var_chaste_interface__i_Na_h_gate__h + (_lt_0_row[10] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[11] * var_chaste_interface__environment__dt));
        rY[3] = (var_chaste_interface__i_Na_j_gate__j + (_lt_0_row[12] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[13] * var_chaste_interface__environment__dt));
        rY[1] = (var_chaste_interface__i_Na_m_gate__m + (_lt_0_row[14] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[15] * var_chaste_interface__environment__dt));
        rY[11] = (var_chaste_interface__i_f_Xf_gate__Xf + (_lt_0_row[16] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[17] * var_chaste_interface__environment__dt));
        rY[12] = (var_chaste_interface__i_to_q_gate__q + (_lt_0_row[18] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[19] * var_chaste_interface__environment__dt));
        rY[13] = (var_chaste_interface__i_to_r_gate__r + (_lt_0_row[20] * var_chaste_interface__environment__dt)) / (1.0 - (_lt_0_row[21] * var_chaste_interface__environment__dt));
        
        double _guess[6] = {rY[16],rY[15],rY[17],rY[5],rY[7],rY[14]};
        CardiacNewtonSolver<6,Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler>* _p_solver = CardiacNewtonSolver<6,Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler>::Instance();
        _p_solver->Solve(*this, var_chaste_interface__environment__time, _guess);
        rY[16] = _guess[0];
        rY[15] = _guess[1];
        rY[17] = _guess[2];
        rY[5] = _guess[3];
        rY[7] = _guess[4];
        rY[14] = _guess[5];
    }
    
    std::vector<double> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        
        
        
        // Mathematics
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
        const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * ((((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * (((0.001 * var_chaste_interface__Membrane__Vm) * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
        const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * ((0.001 * var_chaste_interface__Membrane__Vm) -  -0.017000000000000001)); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
        const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * (((0.001 * var_chaste_interface__Membrane__Vm) - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
        const double var_i_to__i_to = mParameters[16] * (((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-(0.001 * var_chaste_interface__Membrane__Vm)) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * ((0.001 * var_chaste_interface__Membrane__Vm) * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_chaste_interface__stim_mode__i_stim = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_chaste_interface__i_NaK__i_NaK = var_i_NaK__i_NaK; // A_per_F
        const double var_chaste_interface__i_K1__i_K1 = var_i_K1__i_K1; // A_per_F
        const double var_chaste_interface__i_f__i_f = var_i_f__i_f; // A_per_F
        const double var_chaste_interface__i_Na__i_Na = var_i_Na__i_Na; // A_per_F
        const double var_chaste_interface__i_to__i_to = var_i_to__i_to; // A_per_F
        const double var_chaste_interface__i_Kr__i_Kr = var_i_Kr__i_Kr; // A_per_F
        const double var_chaste_interface__i_Ks__i_Ks = var_i_Ks__i_Ks; // A_per_F
        const double var_chaste_interface__i_CaL__i_CaL = var_i_CaL__i_CaL; // A_per_F
        const double var_chaste_interface__i_PCa__i_PCa = var_i_PCa__i_PCa; // A_per_F
        const double var_chaste_interface__i_NaCa__i_NaCa = var_i_NaCa__i_NaCa; // A_per_F
        
        std::vector<double> dqs(12);
        dqs[0] = var_chaste_interface__i_CaL__i_CaL;
        dqs[1] = var_chaste_interface__i_PCa__i_PCa;
        dqs[2] = var_chaste_interface__i_Na__i_Na;
        dqs[3] = var_chaste_interface__i_f__i_f;
        dqs[4] = var_chaste_interface__i_K1__i_K1;
        dqs[5] = var_chaste_interface__i_Kr__i_Kr;
        dqs[6] = var_chaste_interface__i_Ks__i_Ks;
        dqs[7] = var_chaste_interface__i_NaCa__i_NaCa;
        dqs[8] = var_chaste_interface__i_NaK__i_NaK;
        dqs[9] = var_chaste_interface__stim_mode__i_stim;
        dqs[10] = var_chaste_interface__i_to__i_to;
        dqs[11] = var_chaste_interface__environment__time;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler>::Initialise(void)
{
    this->mSystemName = "paci_hyttinen_aaltosetala_severi_ventricularVersion";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-74.3340057624);

    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.102953468725004);

    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.786926637881461);

    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.253943221774722);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.96088425225182e-5);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.970411811263976);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999965815466749);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998925296531804);

    this->mVariableNames.push_back("i_Kr_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00778547011240132);

    this->mVariableNames.push_back("i_Kr_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432162576531617);

    this->mVariableNames.push_back("i_Ks_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0322944866983666);

    this->mVariableNames.push_back("membrane_hyperpolarisation_activated_funny_current_single_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.100615100568753);

    this->mVariableNames.push_back("i_to_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.839295925773219);

    this->mVariableNames.push_back("i_to_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00573289893326379);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.9248496211574);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.80773974140477e-5);

    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(-0.2734234751931);

    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999981028517);

    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("metre_cube_per_F_per_s");
    
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("farad");
    
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");
    
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellMLBackwardEuler)
