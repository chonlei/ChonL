//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: paci_hyttinen_aaltosetala_severi_ventricularVersion
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: , pycml: , optimize: )
//! on Tue Apr 25 21:08:45 2017
//! 
//! <autogenerated>

#include "paci_hyttinen_aaltosetala_severi_ventricularVersion.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"

    boost::shared_ptr<RegularStimulus> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::UseCellMLDefaultStimulus()
    {
        // Use the default stimulus specified by CellML metadata
        const double var_chaste_interface__stim_mode__i_stim_Start = 0.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Period = 1000.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_PulseDuration = 5.0; // millisecond
        const double var_chaste_interface__stim_mode__i_stim_Amplitude = (5.4999999999999996e-10 / mParameters[8]) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        boost::shared_ptr<RegularStimulus> p_cellml_stim(new RegularStimulus(
                -fabs(var_chaste_interface__stim_mode__i_stim_Amplitude),
                var_chaste_interface__stim_mode__i_stim_PulseDuration,
                var_chaste_interface__stim_mode__i_stim_Period,
                var_chaste_interface__stim_mode__i_stim_Start
                ));
        mpIntracellularStimulus = p_cellml_stim;
        return p_cellml_stim;
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[15];
    }
    
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                18,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        this->mpSystemInfo = OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML>::Instance();
        Init();

        // We have a default stimulus specified in the CellML file metadata
        this->mHasDefaultStimulusFromCellML = true;
        this->mParameters[0] = 150; // (c,model_parameters__Ki) [millimolar]
        this->mParameters[1] = 1.8; // (c,model_parameters__Cao) [millimolar]
        this->mParameters[2] = 5.4; // (c,model_parameters__Ko) [millimolar]
        this->mParameters[3] = 151; // (c,model_parameters__Nao) [millimolar]
        this->mParameters[4] = 8.635702e-5; // (c,i_CaL__g_CaL) [metre_cube_per_F_per_s]
        this->mParameters[5] = 0.69264; // (c,i_b_Ca__g_b_Ca) [S_per_F]
        this->mParameters[6] = 0.9; // (c,i_b_Na__g_b_Na) [S_per_F]
        this->mParameters[7] = 0.4125; // (c,i_PCa__g_PCa) [A_per_F]
        this->mParameters[8] = 9.87109e-11; // (c,model_parameters__Cm) [farad]
        this->mParameters[9] = 3671.2302; // (c,i_Na__g_Na) [S_per_F]
        this->mParameters[10] = 30.10312; // (c,i_f__g_f) [S_per_F]
        this->mParameters[11] = 28.1492; // (c,i_K1__g_K1) [S_per_F]
        this->mParameters[12] = 29.8667; // (c,i_Kr__g_Kr) [S_per_F]
        this->mParameters[13] = 2.041; // (c,i_Ks__g_Ks) [S_per_F]
        this->mParameters[14] = 4900; // (c,i_NaCa__kNaCa) [A_per_F]
        this->mParameters[15] = 1.841424; // (c,i_NaK__PNaK) [A_per_F]
        this->mParameters[16] = 29.9038; // (c,i_to__g_to) [S_per_F]
        this->mParameters[17] = 310; // (c,model_parameters__T) [kelvin]
    }
    
    Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::~Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML()
    {
    }
    
    double Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        
        const double var_i_CaL__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * (var_i_CaL__Vm * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_i_K1__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
        const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * ((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * ((var_i_K1__Vm - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
        const double var_i_f__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * (var_i_f__Vm -  -0.017000000000000001)); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * (var_i_Na__Vm - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * ((var_i_Kr__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
        const double var_i_Ks__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * ((var_i_Ks__Vm - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
        const double var_i_to__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_to__i_to = mParameters[16] * ((var_i_to__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * (var_i_NaK__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-var_i_NaK__Vm) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * (8.3144720000000003 * mParameters[17])) * 1.0364268649036186e-05) * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai))); // A_per_F
        const double var_i_b_Na__i_b_Na = mParameters[6] * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na); // A_per_F
        const double var_chaste_interface__i_NaK__i_NaK = var_i_NaK__i_NaK; // A_per_F
        const double var_chaste_interface__i_K1__i_K1 = var_i_K1__i_K1; // A_per_F
        const double var_chaste_interface__i_f__i_f = var_i_f__i_f; // A_per_F
        const double var_chaste_interface__i_Na__i_Na = var_i_Na__i_Na; // A_per_F
        const double var_chaste_interface__i_to__i_to = var_i_to__i_to; // A_per_F
        const double var_chaste_interface__i_Kr__i_Kr = var_i_Kr__i_Kr; // A_per_F
        const double var_chaste_interface__i_Ks__i_Ks = var_i_Ks__i_Ks; // A_per_F
        const double var_chaste_interface__i_CaL__i_CaL = var_i_CaL__i_CaL; // A_per_F
        const double var_chaste_interface__i_PCa__i_PCa = var_i_PCa__i_PCa; // A_per_F
        const double var_chaste_interface__i_NaCa__i_NaCa = var_i_NaCa__i_NaCa; // A_per_F
        const double var_chaste_interface__i_ionic = (var_chaste_interface__i_K1__i_K1 + var_chaste_interface__i_to__i_to + var_chaste_interface__i_Kr__i_Kr + var_chaste_interface__i_Ks__i_Ks + var_chaste_interface__i_CaL__i_CaL + var_chaste_interface__i_NaK__i_NaK + var_chaste_interface__i_Na__i_Na + var_chaste_interface__i_NaCa__i_NaCa + var_chaste_interface__i_PCa__i_PCa + var_chaste_interface__i_f__i_f + var_i_b_Na__i_b_Na + var_i_b_Ca__i_b_Ca) * HeartConfig::Instance()->GetCapacitance(); // uA_per_cm2
        
        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }
    
    void Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::EvaluateYDerivatives(double var_chaste_interface__environment__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        double var_chaste_interface__calcium_dynamics__Ca_SR = rY[16];
        // Units: millimolar; Initial value: -0.2734234751931
        double var_chaste_interface__calcium_dynamics__g = rY[17];
        // Units: dimensionless; Initial value: 0.999999981028517
        
        
        // Mathematics
        double d_dt_chaste_interface__Membrane__Vm;
        const double var_i_CaL__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * (var_i_CaL__Vm * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_i_f__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * (var_i_Na__Vm - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Ks__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_to__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * (var_i_NaK__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-var_i_NaK__Vm) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_i_b_Ca__i_b_Ca = mParameters[5] * ((0.001 * var_chaste_interface__Membrane__Vm) - (((0.5 * (8.3144720000000003 * mParameters[17])) * 1.0364268649036186e-05) * log(mParameters[1] / var_chaste_interface__calcium_dynamics__Cai))); // A_per_F
        const double var_i_b_Na__i_b_Na = mParameters[6] * ((0.001 * var_chaste_interface__Membrane__Vm) - var_electric_potentials__E_Na); // A_per_F
        const double var_i_CaL_f1_gate__f1_inf = 1.0 / (1.0 + exp(((var_i_CaL__Vm * 1000.0) + 26.0) * 0.33333333333333331)); // dimensionless
        const double var_i_CaL_fCa_gate__fCa_inf = ((1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 1666.6666666666667, 8.0))) + ((0.10000000000000001 / (1.0 + exp((var_chaste_interface__calcium_dynamics__Cai - 0.00089999999999999998) * 10000.0))) + (0.29999999999999999 / (1.0 + exp((var_chaste_interface__calcium_dynamics__Cai - 0.00075000000000000002) * 1250.0))))) * 0.76010945576162958; // dimensionless
        const double var_calcium_dynamics__g_inf = (var_chaste_interface__calcium_dynamics__Cai <= 0.00035) ? (1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 2857.1428571428573, 6.0))) : (1.0 / (1.0 + pow(var_chaste_interface__calcium_dynamics__Cai * 2857.1428571428573, 16.0))); // dimensionless
        const double var_calcium_dynamics__i_rel = (8.2319999999999993 + ((16.463999999999999 * pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0)) / (0.0625 + pow(var_chaste_interface__calcium_dynamics__Ca_SR, 2.0)))) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__calcium_dynamics__g * 0.041099999999999998)); // millimolar_per_second
        const double var_calcium_dynamics__i_up = 0.56064000000000003 / (1.0 + (6.2499999999999997e-08 / pow(var_chaste_interface__calcium_dynamics__Cai, 2.0))); // millimolar_per_second
        const double var_calcium_dynamics__i_leak = (var_chaste_interface__calcium_dynamics__Ca_SR - var_chaste_interface__calcium_dynamics__Cai) * 0.00044443999999999999; // millimolar_per_second
        const double d_dt_chaste_interface__i_Na_m_gate__m = 0.001 * (((1.0 / pow(1.0 + exp((((-var_i_Na__Vm) * 1000.0) - 34.100000000000001) * 0.16949152542372881), 0.33333333333333331)) - var_chaste_interface__i_Na_m_gate__m) / ((1.0 * ((1.0 / (1.0 + exp((((-var_i_Na__Vm) * 1000.0) - 60.0) * 0.20000000000000001))) * ((0.10000000000000001 / (1.0 + exp(((var_i_Na__Vm * 1000.0) + 35.0) * 0.20000000000000001))) + (0.10000000000000001 / (1.0 + exp(((var_i_Na__Vm * 1000.0) - 50.0) * 0.0050000000000000001)))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_Na_h_gate__h = 0.001 * (((1.0 / sqrt(1.0 + exp(((var_i_Na__Vm * 1000.0) + 72.099999999999994) * 0.17543859649122806))) - var_chaste_interface__i_Na_h_gate__h) / ((var_i_Na__Vm <  -0.040000000000000001) ? (1.5 / ((((var_i_Na__Vm <  -0.040000000000000001) ? (0.057000000000000002 * exp((-((var_i_Na__Vm * 1000.0) + 80.0)) * 0.14705882352941177)) : 0.0) + ((var_i_Na__Vm <  -0.040000000000000001) ? ((2.7000000000000002 * exp(0.079000000000000001 * (var_i_Na__Vm * 1000.0))) + (3.1000000000000001 * (100000.0 * exp(0.34849999999999998 * (var_i_Na__Vm * 1000.0))))) : (0.77000000000000002 / (0.13 * (1.0 + exp(((var_i_Na__Vm * 1000.0) + 10.66) *  -0.0900900900900901)))))) * 1000.0)) : 0.002542)); // 'per millisecond'
        const double d_dt_chaste_interface__i_Na_j_gate__j = 0.001 * (((1.0 / sqrt(1.0 + exp(((var_i_Na__Vm * 1000.0) + 72.099999999999994) * 0.17543859649122806))) - var_chaste_interface__i_Na_j_gate__j) / (7.0 / ((((var_i_Na__Vm <  -0.040000000000000001) ? (((( -25428.0 * exp(0.24440000000000001 * (var_i_Na__Vm * 1000.0))) - (6.9480000000000004 * (9.9999999999999995e-07 * exp( -0.043909999999999998 * (var_i_Na__Vm * 1000.0))))) * ((var_i_Na__Vm * 1000.0) + 37.780000000000001)) / (1.0 + exp(0.311 * ((var_i_Na__Vm * 1000.0) + 79.230000000000004)))) : 0.0) + ((var_i_Na__Vm <  -0.040000000000000001) ? ((0.024240000000000001 * exp( -0.01052 * (var_i_Na__Vm * 1000.0))) / (1.0 + exp( -0.13780000000000001 * ((var_i_Na__Vm * 1000.0) + 40.140000000000001)))) : ((0.59999999999999998 * exp(0.057000000000000002 * (var_i_Na__Vm * 1000.0))) / (1.0 + exp( -0.10000000000000001 * ((var_i_Na__Vm * 1000.0) + 32.0)))))) * 1000.0))); // 'per millisecond'
        const double d_dt_chaste_interface__i_CaL_d_gate__d = 0.001 * (((1.0 / (1.0 + exp((-((var_i_CaL__Vm * 1000.0) + 9.0999999999999996)) * 0.14285714285714285))) - var_chaste_interface__i_CaL_d_gate__d) / (((((0.25 + (1.3999999999999999 / (1.0 + exp((((-var_i_CaL__Vm) * 1000.0) - 35.0) * 0.076923076923076927)))) * (1.3999999999999999 / (1.0 + exp(((var_i_CaL__Vm * 1000.0) + 5.0) * 0.20000000000000001)))) + (1.0 / (1.0 + exp((((-var_i_CaL__Vm) * 1000.0) + 50.0) * 0.050000000000000003)))) * 1.0) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_CaL_f1_gate__f1 = 0.001 * ((var_i_CaL_f1_gate__f1_inf - var_chaste_interface__i_CaL_f1_gate__f1) / (((20.0 + ((1102.5 * exp(-pow(pow((var_i_CaL__Vm * 1000.0) + 27.0, 2.0) * 0.066666666666666666, 2.0))) + ((200.0 / (1.0 + exp((13.0 - (var_i_CaL__Vm * 1000.0)) * 0.10000000000000001))) + (180.0 / (1.0 + exp((30.0 + (var_i_CaL__Vm * 1000.0)) * 0.10000000000000001)))))) * (((var_i_CaL_f1_gate__f1_inf - var_chaste_interface__i_CaL_f1_gate__f1) > 0.0) ? (1.0 + (1433.0 * (var_chaste_interface__calcium_dynamics__Cai - 4.9999999999999996e-05))) : 1.0)) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_CaL_f2_gate__f2 = 0.001 * (((0.33000000000000002 + (0.67000000000000004 / (1.0 + exp(((var_i_CaL__Vm * 1000.0) + 35.0) * 0.25)))) - var_chaste_interface__i_CaL_f2_gate__f2) / ((((600.0 * exp((-pow((var_i_CaL__Vm * 1000.0) + 25.0, 2.0)) * 0.0058823529411764705)) + ((31.0 / (1.0 + exp((25.0 - (var_i_CaL__Vm * 1000.0)) * 0.10000000000000001))) + (16.0 / (1.0 + exp((30.0 + (var_i_CaL__Vm * 1000.0)) * 0.10000000000000001))))) * 1.0) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_CaL_fCa_gate__fCa = 0.001 * (((((var_i_CaL__Vm >  -0.059999999999999998) && (var_i_CaL_fCa_gate__fCa_inf > var_chaste_interface__i_CaL_fCa_gate__fCa)) ? 0.0 : 1.0) * (var_i_CaL_fCa_gate__fCa_inf - var_chaste_interface__i_CaL_fCa_gate__fCa)) * 500.0); // 'per millisecond'
        const double d_dt_chaste_interface__i_Kr_Xr1_gate__Xr1 = 0.001 * (((1.0 / (1.0 + exp(((1000.0 * (((( -8.3144720000000003 * mParameters[17]) * 4.5062037604505159e-06) * log(pow(1.0 + (mParameters[1] * 0.38461538461538458), 4.0) / (0.025000000000000001 * pow(1.0 + (mParameters[1] * 1.7241379310344829), 4.0)))) - 0.019)) - (var_i_Kr__Vm * 1000.0)) * 0.2040816326530612))) - var_chaste_interface__i_Kr_Xr1_gate__Xr1) / ((1.0 * ((450.0 / (1.0 + exp(( -45.0 - (var_i_Kr__Vm * 1000.0)) * 0.10000000000000001))) * (6.0 / (1.0 + exp((30.0 + (var_i_Kr__Vm * 1000.0)) * 0.086956521739130432))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_Kr_Xr2_gate__Xr2 = 0.001 * (((1.0 / (1.0 + exp(((var_i_Kr__Vm * 1000.0) + 88.0) * 0.02))) - var_chaste_interface__i_Kr_Xr2_gate__Xr2) / ((1.0 * ((3.0 / (1.0 + exp(( -60.0 - (var_i_Kr__Vm * 1000.0)) * 0.050000000000000003))) * (1.1200000000000001 / (1.0 + exp(( -60.0 + (var_i_Kr__Vm * 1000.0)) * 0.050000000000000003))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_Ks_Xs_gate__Xs = 0.001 * (((1.0 / (1.0 + exp((((-var_i_Ks__Vm) * 1000.0) - 20.0) * 0.0625))) - var_chaste_interface__i_Ks_Xs_gate__Xs) / ((1.0 * ((1100.0 / sqrt(1.0 + exp(( -10.0 - (var_i_Ks__Vm * 1000.0)) * 0.16666666666666666))) * (1.0 / (1.0 + exp(( -60.0 + (var_i_Ks__Vm * 1000.0)) * 0.050000000000000003))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_f_Xf_gate__Xf = 0.001 * (((1.0 / (1.0 + exp(((var_i_f__Vm * 1000.0) + 77.849999999999994) * 0.20000000000000001))) - var_chaste_interface__i_f_Xf_gate__Xf) / ((1900.0 / (1.0 + exp(((var_i_f__Vm * 1000.0) + 15.0) * 0.10000000000000001))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_to_q_gate__q = 0.001 * (((1.0 / (1.0 + exp(((var_i_to__Vm * 1000.0) + 53.0) * 0.076923076923076927))) - var_chaste_interface__i_to_q_gate__q) / ((6.0599999999999996 + (39.101999999999997 / ((0.56999999999999995 * exp( -0.080000000000000002 * ((var_i_to__Vm * 1000.0) + 44.0))) + (0.065000000000000002 * exp(0.10000000000000001 * ((var_i_to__Vm * 1000.0) + 45.93)))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__i_to_r_gate__r = 0.001 * (((1.0 / (1.0 + exp((-((var_i_to__Vm * 1000.0) - 22.300000000000001)) * 0.053333333333333337))) - var_chaste_interface__i_to_r_gate__r) / ((2.75352 + (14.40516 / ((1.0369999999999999 * exp(0.089999999999999997 * ((var_i_to__Vm * 1000.0) + 30.609999999999999))) + (0.36899999999999999 * exp( -0.12 * ((var_i_to__Vm * 1000.0) + 23.84)))))) * 0.001)); // 'per millisecond'
        const double d_dt_chaste_interface__sodium_dynamics__Nai = 0.001 * (((-mParameters[8]) * (var_i_Na__i_Na + (var_i_b_Na__i_b_Na + ((3.0 * var_i_NaK__i_NaK) + (3.0 * var_i_NaCa__i_NaCa))))) * 1177757801.0268393); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Cai = 0.001 * ((1.0 / (1.0 + (0.00025000000000000001 / pow(var_chaste_interface__calcium_dynamics__Cai + 0.001, 2.0)))) * (((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) + var_calcium_dynamics__i_rel) - ((((var_i_CaL__i_CaL + (var_i_b_Ca__i_b_Ca + var_i_PCa__i_PCa)) - (2.0 * var_i_NaCa__i_NaCa)) * mParameters[8]) * 588878900.51341963))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__Ca_SR = 0.001 * ((((1.0 / (1.0 + (3.0 / pow(var_chaste_interface__calcium_dynamics__Ca_SR + 0.29999999999999999, 2.0)))) * 8800.0) * 0.0017131207921470542) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak))); // 'millimole per litre per millisecond'
        const double d_dt_chaste_interface__calcium_dynamics__g = 0.001 * (((((var_calcium_dynamics__g_inf > var_chaste_interface__calcium_dynamics__g) && ((0.001 * var_chaste_interface__Membrane__Vm) >  -0.059999999999999998)) ? 0.0 : 1.0) * (var_calcium_dynamics__g_inf - var_chaste_interface__calcium_dynamics__g)) * 500.0); // 'per millisecond'
        
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface__Membrane__Vm = 0.0;
        }
        else
        {
            const double var_i_K1__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
            const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
            const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
            const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * ((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * ((var_i_K1__Vm - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
            const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * (var_i_f__Vm -  -0.017000000000000001)); // A_per_F
            const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * ((var_i_Kr__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
            const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * ((var_i_Ks__Vm - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
            const double var_i_to__i_to = mParameters[16] * ((var_i_to__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
            const double var_chaste_interface__stim_mode__i_stim = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
            d_dt_chaste_interface__Membrane__Vm = -((var_i_K1__i_K1 + var_i_to__i_to + var_i_Kr__i_Kr + var_i_Ks__i_Ks + var_i_CaL__i_CaL + var_i_NaK__i_NaK + var_i_Na__i_Na + var_i_NaCa__i_NaCa + var_i_PCa__i_PCa + var_i_f__i_f + var_i_b_Na__i_b_Na + var_i_b_Ca__i_b_Ca) - (var_chaste_interface__stim_mode__i_stim / HeartConfig::Instance()->GetCapacitance())); // 'millivolt per millisecond'
        }
        
        rDY[0] = d_dt_chaste_interface__Membrane__Vm;
        rDY[1] = d_dt_chaste_interface__i_Na_m_gate__m;
        rDY[2] = d_dt_chaste_interface__i_Na_h_gate__h;
        rDY[3] = d_dt_chaste_interface__i_Na_j_gate__j;
        rDY[4] = d_dt_chaste_interface__i_CaL_d_gate__d;
        rDY[5] = d_dt_chaste_interface__i_CaL_f1_gate__f1;
        rDY[6] = d_dt_chaste_interface__i_CaL_f2_gate__f2;
        rDY[7] = d_dt_chaste_interface__i_CaL_fCa_gate__fCa;
        rDY[8] = d_dt_chaste_interface__i_Kr_Xr1_gate__Xr1;
        rDY[9] = d_dt_chaste_interface__i_Kr_Xr2_gate__Xr2;
        rDY[10] = d_dt_chaste_interface__i_Ks_Xs_gate__Xs;
        rDY[11] = d_dt_chaste_interface__i_f_Xf_gate__Xf;
        rDY[12] = d_dt_chaste_interface__i_to_q_gate__q;
        rDY[13] = d_dt_chaste_interface__i_to_r_gate__r;
        rDY[14] = d_dt_chaste_interface__sodium_dynamics__Nai;
        rDY[15] = d_dt_chaste_interface__calcium_dynamics__Cai;
        rDY[16] = d_dt_chaste_interface__calcium_dynamics__Ca_SR;
        rDY[17] = d_dt_chaste_interface__calcium_dynamics__g;
    }
    
    std::vector<double> Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML::ComputeDerivedQuantities(double var_chaste_interface__environment__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__Vm = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: millivolt; Initial value: -74.3340057624
        double var_chaste_interface__i_Na_m_gate__m = rY[1];
        // Units: dimensionless; Initial value: 0.102953468725004
        double var_chaste_interface__i_Na_h_gate__h = rY[2];
        // Units: dimensionless; Initial value: 0.786926637881461
        double var_chaste_interface__i_Na_j_gate__j = rY[3];
        // Units: dimensionless; Initial value: 0.253943221774722
        double var_chaste_interface__i_CaL_d_gate__d = rY[4];
        // Units: dimensionless; Initial value: 8.96088425225182e-5
        double var_chaste_interface__i_CaL_f1_gate__f1 = rY[5];
        // Units: dimensionless; Initial value: 0.970411811263976
        double var_chaste_interface__i_CaL_f2_gate__f2 = rY[6];
        // Units: dimensionless; Initial value: 0.999965815466749
        double var_chaste_interface__i_CaL_fCa_gate__fCa = rY[7];
        // Units: dimensionless; Initial value: 0.998925296531804
        double var_chaste_interface__i_Kr_Xr1_gate__Xr1 = rY[8];
        // Units: dimensionless; Initial value: 0.00778547011240132
        double var_chaste_interface__i_Kr_Xr2_gate__Xr2 = rY[9];
        // Units: dimensionless; Initial value: 0.432162576531617
        double var_chaste_interface__i_Ks_Xs_gate__Xs = rY[10];
        // Units: dimensionless; Initial value: 0.0322944866983666
        double var_chaste_interface__i_f_Xf_gate__Xf = rY[11];
        // Units: dimensionless; Initial value: 0.100615100568753
        double var_chaste_interface__i_to_q_gate__q = rY[12];
        // Units: dimensionless; Initial value: 0.839295925773219
        double var_chaste_interface__i_to_r_gate__r = rY[13];
        // Units: dimensionless; Initial value: 0.00573289893326379
        double var_chaste_interface__sodium_dynamics__Nai = rY[14];
        // Units: millimolar; Initial value: 10.9248496211574
        double var_chaste_interface__calcium_dynamics__Cai = rY[15];
        // Units: millimolar; Initial value: 1.80773974140477e-5
        
        
        // Mathematics
        const double var_i_CaL__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_CaL__i_CaL = ((((mParameters[4] * (4.0 * (var_i_CaL__Vm * 9309421124.3716221))) / (8.3144720000000003 * mParameters[17])) * ((var_chaste_interface__calcium_dynamics__Cai * exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) - (0.34100000000000003 * mParameters[1]))) / (exp((2.0 * (var_i_CaL__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) - 1.0)) * (var_chaste_interface__i_CaL_d_gate__d * (var_chaste_interface__i_CaL_f1_gate__f1 * (var_chaste_interface__i_CaL_f2_gate__f2 * var_chaste_interface__i_CaL_fCa_gate__fCa))); // A_per_F
        const double var_i_K1__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_electric_potentials__E_K = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[2] / mParameters[0]); // volt
        const double var_i_K1__alpha_K1 = 3.9100000000000001 / (1.0 + exp(0.59419999999999995 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 200.0))); // dimensionless
        const double var_i_K1__i_K1 = mParameters[11] * ((var_i_K1__alpha_K1 / (var_i_K1__alpha_K1 + ((( -1.5089999999999999 * exp(0.00020000000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) + 100.0))) + exp(0.58860000000000001 * (((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0)) - 10.0))) / (1.0 + exp(0.45469999999999999 * ((var_i_K1__Vm * 1000.0) - (var_electric_potentials__E_K * 1000.0))))))) * ((var_i_K1__Vm - var_electric_potentials__E_K) * sqrt(mParameters[2] * 0.18518518518518517))); // A_per_F
        const double var_i_f__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_f__i_f = mParameters[10] * (var_chaste_interface__i_f_Xf_gate__Xf * (var_i_f__Vm -  -0.017000000000000001)); // A_per_F
        const double var_electric_potentials__E_Na = ((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log(mParameters[3] / var_chaste_interface__sodium_dynamics__Nai); // volt
        const double var_i_Na__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Na__i_Na = 1.0 * (mParameters[9] * (pow(var_chaste_interface__i_Na_m_gate__m, 3.0) * (var_chaste_interface__i_Na_h_gate__h * (var_chaste_interface__i_Na_j_gate__j * (var_i_Na__Vm - var_electric_potentials__E_Na))))); // A_per_F
        const double var_i_Kr__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Kr__i_Kr = 1.0 * (mParameters[12] * ((var_i_Kr__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_Kr_Xr1_gate__Xr1 * (var_chaste_interface__i_Kr_Xr2_gate__Xr2 * sqrt(mParameters[2] * 0.18518518518518517))))); // A_per_F
        const double var_i_Ks__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_Ks__i_Ks = 1.0 * (mParameters[13] * ((var_i_Ks__Vm - (((8.3144720000000003 * mParameters[17]) * 1.0364268649036186e-05) * log((mParameters[2] + (0.029999999999999999 * mParameters[3])) / (mParameters[0] + (0.029999999999999999 * var_chaste_interface__sodium_dynamics__Nai))))) * (pow(var_chaste_interface__i_Ks_Xs_gate__Xs, 2.0) * (1.0 + (0.59999999999999998 / (1.0 + pow(3.8000000000000002e-05 / var_chaste_interface__calcium_dynamics__Cai, 1.3999999999999999))))))); // A_per_F
        const double var_i_to__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_to__i_to = mParameters[16] * ((var_i_to__Vm - var_electric_potentials__E_K) * (var_chaste_interface__i_to_q_gate__q * var_chaste_interface__i_to_r_gate__r)); // A_per_F
        const double var_i_PCa__i_PCa = (mParameters[7] * var_chaste_interface__calcium_dynamics__Cai) / (var_chaste_interface__calcium_dynamics__Cai + 0.00050000000000000001); // A_per_F
        const double var_i_NaK__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaK__i_NaK = ((((mParameters[15] * mParameters[2]) / (mParameters[2] + 1.0)) * var_chaste_interface__sodium_dynamics__Nai) / (var_chaste_interface__sodium_dynamics__Nai + 40.0)) / (1.0 + ((0.1245 * exp(( -0.10000000000000001 * (var_i_NaK__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17]))) + (0.035299999999999998 * exp(((-var_i_NaK__Vm) * 96485.341499999995) / (8.3144720000000003 * mParameters[17]))))); // A_per_F
        const double var_i_NaCa__Vm = 0.001 * var_chaste_interface__Membrane__Vm; // volt
        const double var_i_NaCa__i_NaCa = (mParameters[14] * ((exp((0.34999999999999998 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(var_chaste_interface__sodium_dynamics__Nai, 3.0) * mParameters[1])) - (exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])) * (pow(mParameters[3], 3.0) * (var_chaste_interface__calcium_dynamics__Cai * 2.8571431999999999))))) / ((669921.875 + pow(mParameters[3], 3.0)) * ((1.3799999999999999 + mParameters[1]) * (1.0 + (0.10000000000000001 * exp(( -0.65000000000000002 * (var_i_NaCa__Vm * 96485.341499999995)) / (8.3144720000000003 * mParameters[17])))))); // A_per_F
        const double var_chaste_interface__stim_mode__i_stim = -GetIntracellularAreaStimulus(var_chaste_interface__environment__time);
        const double var_chaste_interface__i_NaK__i_NaK = var_i_NaK__i_NaK; // A_per_F
        const double var_chaste_interface__i_K1__i_K1 = var_i_K1__i_K1; // A_per_F
        const double var_chaste_interface__i_f__i_f = var_i_f__i_f; // A_per_F
        const double var_chaste_interface__i_Na__i_Na = var_i_Na__i_Na; // A_per_F
        const double var_chaste_interface__i_to__i_to = var_i_to__i_to; // A_per_F
        const double var_chaste_interface__i_Kr__i_Kr = var_i_Kr__i_Kr; // A_per_F
        const double var_chaste_interface__i_Ks__i_Ks = var_i_Ks__i_Ks; // A_per_F
        const double var_chaste_interface__i_CaL__i_CaL = var_i_CaL__i_CaL; // A_per_F
        const double var_chaste_interface__i_PCa__i_PCa = var_i_PCa__i_PCa; // A_per_F
        const double var_chaste_interface__i_NaCa__i_NaCa = var_i_NaCa__i_NaCa; // A_per_F
        
        std::vector<double> dqs(12);
        dqs[0] = var_chaste_interface__i_CaL__i_CaL;
        dqs[1] = var_chaste_interface__i_PCa__i_PCa;
        dqs[2] = var_chaste_interface__i_Na__i_Na;
        dqs[3] = var_chaste_interface__i_f__i_f;
        dqs[4] = var_chaste_interface__i_K1__i_K1;
        dqs[5] = var_chaste_interface__i_Kr__i_Kr;
        dqs[6] = var_chaste_interface__i_Ks__i_Ks;
        dqs[7] = var_chaste_interface__i_NaCa__i_NaCa;
        dqs[8] = var_chaste_interface__i_NaK__i_NaK;
        dqs[9] = var_chaste_interface__stim_mode__i_stim;
        dqs[10] = var_chaste_interface__i_to__i_to;
        dqs[11] = var_chaste_interface__environment__time;
        return dqs;
    }
    
template<>
void OdeSystemInformation<Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML>::Initialise(void)
{
    this->mSystemName = "paci_hyttinen_aaltosetala_severi_ventricularVersion";
    this->mFreeVariableName = "time";
    this->mFreeVariableUnits = "millisecond";
    
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-74.3340057624);

    this->mVariableNames.push_back("membrane_fast_sodium_current_m_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.102953468725004);

    this->mVariableNames.push_back("membrane_fast_sodium_current_h_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.786926637881461);

    this->mVariableNames.push_back("membrane_fast_sodium_current_j_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.253943221774722);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_d_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(8.96088425225182e-5);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_f_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.970411811263976);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_f2_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999965815466749);

    this->mVariableNames.push_back("membrane_L_type_calcium_current_fCa_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.998925296531804);

    this->mVariableNames.push_back("i_Kr_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00778547011240132);

    this->mVariableNames.push_back("i_Kr_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.432162576531617);

    this->mVariableNames.push_back("i_Ks_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0322944866983666);

    this->mVariableNames.push_back("membrane_hyperpolarisation_activated_funny_current_single_gate");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.100615100568753);

    this->mVariableNames.push_back("i_to_q_gate__q");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.839295925773219);

    this->mVariableNames.push_back("i_to_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00573289893326379);

    this->mVariableNames.push_back("cytosolic_sodium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(10.9248496211574);

    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(1.80773974140477e-5);

    this->mVariableNames.push_back("JSR_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(-0.2734234751931);

    this->mVariableNames.push_back("calcium_dynamics__g");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999999981028517);

    this->mParameterNames.push_back("cytosolic_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_calcium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_potassium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("extracellular_sodium_concentration");
    this->mParameterUnits.push_back("millimolar");
    
    this->mParameterNames.push_back("membrane_L_type_calcium_current_conductance");
    this->mParameterUnits.push_back("metre_cube_per_F_per_s");
    
    this->mParameterNames.push_back("membrane_background_calcium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_background_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_calcium_pump_current_conductance");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_capacitance");
    this->mParameterUnits.push_back("farad");
    
    this->mParameterNames.push_back("membrane_fast_sodium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_hyperpolarisation_activated_funny_current_potassium_component_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_inward_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_rapid_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_slow_delayed_rectifier_potassium_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("membrane_sodium_calcium_exchanger_current_conductance");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_sodium_potassium_pump_current_permeability");
    this->mParameterUnits.push_back("A_per_F");
    
    this->mParameterNames.push_back("membrane_transient_outward_current_conductance");
    this->mParameterUnits.push_back("S_per_F");
    
    this->mParameterNames.push_back("temperature");
    this->mParameterUnits.push_back("kelvin");
    
    this->mDerivedQuantityNames.push_back("membrane_L_type_calcium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_calcium_pump_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_fast_sodium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_hyperpolarisation_activated_funny_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_inward_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_rapid_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_slow_delayed_rectifier_potassium_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_calcium_exchanger_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_sodium_potassium_pump_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");
    
    this->mDerivedQuantityNames.push_back("membrane_transient_outward_current");
    this->mDerivedQuantityUnits.push_back("A_per_F");
    
    this->mDerivedQuantityNames.push_back("time");
    this->mDerivedQuantityUnits.push_back("millisecond");
    
    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(Cellpaci_hyttinen_aaltosetala_severi_ventricularVersionFromCellML)
